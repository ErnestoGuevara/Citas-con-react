{"ast":null,"code":"import _toConsumableArray from\"C:/Users/neto_/OneDrive/Escritorio/REACT/citas/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/neto_/OneDrive/Escritorio/REACT/citas/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import Formulario from\"./components/Formulario\";import Cita from\"./components/Cita\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//Citas en local storage\nvar citasIniciales=JSON.parse(localStorage.getItem(\"citas\"));if(!citasIniciales){citasIniciales=[];}//Arreglo de citas\nvar _useState=useState(citasIniciales),_useState2=_slicedToArray(_useState,2),citas=_useState2[0],guardarCitas=_useState2[1];//UseEffect para realizar ciertas operaciones cuando el state cambia\nuseEffect(function(){var citasIniciales=JSON.parse(localStorage.getItem(\"citas\"));if(citasIniciales){localStorage.setItem(\"citas\",JSON.stringify(citas));}else{localStorage.setItem(\"citas\",JSON.stringify([]));}},[citas]);//Funcion que tome las citas actuales y agregue la nueva \nvar crearCita=function crearCita(cita){guardarCitas([].concat(_toConsumableArray(citas),[cita]));};//Funcion que elimina una cita por su id\nvar eliminarCita=function eliminarCita(id){var nuevasCitas=citas.filter(function(cita){return cita.id!==id;});guardarCitas(nuevasCitas);};//Mensaje condicional\nvar titulo=citas.length===0?\"No hay citas\":\"Administra tus citas\";return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Administrador de pacientes\"}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"one-half column\",children:/*#__PURE__*/_jsx(Formulario,{crearCita:crearCita})}),/*#__PURE__*/_jsxs(\"div\",{className:\"one-half column\",children:[/*#__PURE__*/_jsx(\"h2\",{children:titulo}),citas.map(function(cita){return/*#__PURE__*/_jsx(Cita,{cita:cita,eliminarCita:eliminarCita},cita.id);})]})]})})]});}export default App;","map":{"version":3,"sources":["C:/Users/neto_/OneDrive/Escritorio/REACT/citas/src/App.js"],"names":["React","Fragment","useState","useEffect","Formulario","Cita","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","setItem","stringify","crearCita","cita","eliminarCita","id","nuevasCitas","filter","titulo","length","map"],"mappings":"0QAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAwBC,QAAxB,CAAiCC,SAAjC,KAAiD,OAAjD,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,C,wFACA,QAASC,CAAAA,GAAT,EAAe,CAEb;AACA,GAAIC,CAAAA,cAAc,CAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAnB,CACA,GAAG,CAACJ,cAAJ,CAAmB,CACjBA,cAAc,CAAC,EAAf,CACD,CAED;AARa,cAScL,QAAQ,CAACK,cAAD,CATtB,wCASNK,KATM,eASAC,YATA,eAWb;AACAV,SAAS,CAAC,UAAI,CACZ,GAAII,CAAAA,cAAc,CAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAnB,CAEA,GAAGJ,cAAH,CAAkB,CAChBG,YAAY,CAACI,OAAb,CAAqB,OAArB,CAA6BN,IAAI,CAACO,SAAL,CAAeH,KAAf,CAA7B,EACD,CAFD,IAGI,CACFF,YAAY,CAACI,OAAb,CAAqB,OAArB,CAA6BN,IAAI,CAACO,SAAL,CAAe,EAAf,CAA7B,EACD,CACF,CATQ,CASP,CAACH,KAAD,CATO,CAAT,CAWA;AACA,GAAMI,CAAAA,SAAS,CAAC,QAAVA,CAAAA,SAAU,CAAAC,IAAI,CAAE,CACpBJ,YAAY,8BACPD,KADO,GAEVK,IAFU,GAAZ,CAID,CALD,CAOA;AACA,GAAMC,CAAAA,YAAY,CAAC,QAAbA,CAAAA,YAAa,CAAAC,EAAE,CAAE,CACrB,GAAMC,CAAAA,WAAW,CAACR,KAAK,CAACS,MAAN,CAAa,SAAAJ,IAAI,QAAEA,CAAAA,IAAI,CAACE,EAAL,GAAYA,EAAd,EAAjB,CAAlB,CACAN,YAAY,CAACO,WAAD,CAAZ,CACD,CAHD,CAKA;AACA,GAAME,CAAAA,MAAM,CAACV,KAAK,CAACW,MAAN,GAAe,CAAf,CAAmB,cAAnB,CAAoC,sBAAjD,CAEA,mBACE,MAAC,QAAD,yBACE,kDADF,cAGE,YAAK,SAAS,CAAC,WAAf,uBACE,aAAK,SAAS,CAAC,KAAf,wBACE,YAAK,SAAS,CAAC,iBAAf,uBACE,KAAC,UAAD,EACE,SAAS,CAAEP,SADb,EADF,EADF,cAME,aAAK,SAAS,CAAC,iBAAf,wBACE,oBAAKM,MAAL,EADF,CAEGV,KAAK,CAACY,GAAN,CAAU,SAAAP,IAAI,qBACb,KAAC,IAAD,EAEA,IAAI,CAAEA,IAFN,CAGA,YAAY,CAAEC,YAHd,EACKD,IAAI,CAACE,EADV,CADa,EAAd,CAFH,GANF,GADF,EAHF,GADF,CA0BD,CAED,cAAeb,CAAAA,GAAf","sourcesContent":["import React, {Fragment,useState,useEffect} from 'react';\nimport Formulario from \"./components/Formulario\"\nimport Cita from \"./components/Cita\"\nfunction App() {\n\n  //Citas en local storage\n  let citasIniciales=JSON.parse(localStorage.getItem(\"citas\"));\n  if(!citasIniciales){\n    citasIniciales=[];\n  }\n\n  //Arreglo de citas\n  const [citas,guardarCitas]=useState(citasIniciales);\n\n  //UseEffect para realizar ciertas operaciones cuando el state cambia\n  useEffect(()=>{\n    let citasIniciales=JSON.parse(localStorage.getItem(\"citas\"));\n\n    if(citasIniciales){\n      localStorage.setItem(\"citas\",JSON.stringify(citas))\n    }\n    else{\n      localStorage.setItem(\"citas\",JSON.stringify([]))\n    }\n  },[citas]);\n\n  //Funcion que tome las citas actuales y agregue la nueva \n  const crearCita=cita=>{\n    guardarCitas([\n      ...citas,\n      cita\n    ]);\n  }\n\n  //Funcion que elimina una cita por su id\n  const eliminarCita=id=>{\n    const nuevasCitas=citas.filter(cita=>cita.id !== id)\n    guardarCitas(nuevasCitas);\n  }\n\n  //Mensaje condicional\n  const titulo=citas.length===0 ? \"No hay citas\" : \"Administra tus citas\";\n\n  return (\n    <Fragment>\n      <h1>Administrador de pacientes</h1>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Formulario\n              crearCita={crearCita}\n            />\n          </div>\n          <div className=\"one-half column\">\n            <h2>{titulo}</h2>\n            {citas.map(cita=>(\n              <Cita\n              key={cita.id}\n              cita={cita}\n              eliminarCita={eliminarCita}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}